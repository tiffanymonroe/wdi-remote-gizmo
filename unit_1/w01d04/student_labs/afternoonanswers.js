// const printCool = (name) => {
//   return name + " is cool."
// }
//
// console.log(printCool("Captain Reynolds"));
//
// const calculateCube = (num) => {
//   return Math.pow(num, 3);
// }
//
// console.log(calculateCube(5));

// const isAVowel = (character) => {
//   if (character.length > 1) {
//     return "Not a character";
//   } else {
//     const charLC = character.toLowerCase();
//     if (charLC === "a" || charLC === "e" || charLC === "i" || charLC === "o" || charLC === "u") {
//       return true;
//     } else {
//       return false;
//     }
//   }
// }
//
// console.log(isAVowel("e"));
//
// //Karolin
//
// const isAVowel = ( letter ) => {
//   const vowels = [ 'a' , 'e', 'i', 'o', 'u' ];
//   for ( let k  = 0; k < vowels.length; k++ ) {
//     if ( vowels[k] === letter.toLowerCase() ) {
//       return true;
//     }
//   }
//   return false;
// }
//
// // console.log( isAVowel( "A" ) );

// const getTwoLengths = (string1, string2) => {
//   const arr = [];
//   const len1 = string1.length;
//   const len2 = string2.length;
//   arr.push(len1);
//   arr.push(len2);
//   return arr;
// }
//
// console.log(getTwoLengths("Hank", "Hippopopalous"));
//
// //Karolin
//
// const getTwoLengths = ( str1 , str2 ) => {
//     return [ str1.length , str2.length ];
// }

// const getMultipleLengths = (stringArray) => {
//   const lengths = [];
//   for (let i=0; i<stringArray.length; i++) {
//     lengths.push(stringArray[i].length)
//   } return lengths;
// }
//
// console.log(getMultipleLengths(["hello", "what", "is", "up", "dude"]));

//Karolin

// const maxOfThree = (num1, num2, num3) => {
//   return Math.max(num1, num2, num3);
// }
//
// console.log(maxOfThree(9, 9, 1));

//Karolin

// const printLongestWord = ( arrayOfStrings ) => {
//   let longest = '';
//   for ( var i = 0; i < arrayOfStrings.length; i ++ ){
//     if ( arrayOfStrings[i].length > longest.length ){
//       longest = arrayOfStrings[i];
//     }
//   }
//   return longest;
// }
//
// console.log(printLongestWord(["BoJack", "Princess", "Diane", "a", "Max", "Peanutbutter", "big", "Todd"]));

// const transmogrify = (num1, num2, num3) => {
//   const base = num1 * num2;
//   const pow = num3;
//   return Math.pow(base, pow);
// }
//
// console.log(transmogrify(5, 3, 2));

//KAROLIN >>

//characterized by the fact that every number after the first two is the sum of the two preceding ones: 1,1,2,3,5,8,13,21,34,55,89,144

// Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:
//
// 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
//
// By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.
//
// let sum = 0;
// const fib = (num1, num2) => {
//   if (num2 > 4000000) return "SUM: " + sum;
//   if (num2 % 2 === 0) sum += num2;
//   return fib(num2, num1+num2)
// }
//
// console.log(fib(0, 1));

//Project Euler 2
//-----------------

//Prints the sequence the number of times of num

// const arr = [1, 2];
// const fib = (num) => {
//     for (let i = 0; i < num; i++){
//       let next = arr[i] + arr[i+1];
//       arr.push(next);
//       console.log(arr[i]);
//     }
//
// }
//
// fib(10);


//Prints the sequence up to the number (not including)

// const arr = [1, 2];
// const fib = (num) => {
//   let i = 0;
//   while (num > arr[arr.length-1]) {
//       let next = arr[i] + arr[i+1];
//       arr.push(next);
//       i++;
//       console.log(arr[i]);
//     }
//   }
//
// fib(100);

//Push the even values from up to 4M into an array and sum.

// const arr = [1, 2];
// const even = [];
// const fib = (num) => {
//   let i = 0;
//   while (num > arr[arr.length-1]) {
//       let next = arr[i] + arr[i+1];
//       arr.push(next);
//       i++;
//       if (arr[i] % 2 === 0) {
//         even.push(arr[i]);
//       }
//     }
//     console.log('even array', even);
//     sum = 0;
//     for (let i = 0; i < even.length; i++){
//       sum = even[i] + sum;
//     }
//     console.log('sum', sum);
//   }
//
// fib(4000000);
